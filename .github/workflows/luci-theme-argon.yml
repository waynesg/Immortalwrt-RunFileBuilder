name: Build luci-theme-argon

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout RunFileBuilder repo
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "PKG_NAME=luci-theme-argon" >> $GITHUB_ENV
          echo "TARGET=all" >> $GITHUB_ENV

      - name: Get latest release tag
        id: get_version
        run: |
          VERSION=$(curl -s https://api.github.com/repos/jerrykuku/luci-theme-argon/releases/latest | jq -r '.tag_name')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "RUN_FILE=luci-theme-argon_${VERSION}_all.run" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y curl unzip git zstd build-essential

      - name: Download luci-theme-argon .ipk
        run: |
          mkdir -p appdir
          cd appdir

          API="https://api.github.com/repos/jerrykuku/luci-theme-argon/releases/latest"
          URL=$(curl -s $API | jq -r '.assets[] | select(.name | test("luci-theme-argon_.*\\.ipk")) | .browser_download_url')
          echo "Download URL: $URL"
          curl -LO "$URL"

      - name: Add install.sh script
        run: |
          cd appdir
          IPK_FILE=$(ls luci-theme-argon_*.ipk)
          cat <<EOF > install.sh
          #!/bin/sh
          opkg update
          if [ \$? -ne 0 ]; then
              echo "opkg update failed."
              exit 1
          fi
          opkg install \$IPK_FILE
          EOF
          chmod +x install.sh

      - name: Clone makeself
        run: git clone https://github.com/megastep/makeself.git

      - name: Create .run package
        run: |
          chmod +x makeself/makeself.sh
          makeself/makeself.sh appdir "${{ env.RUN_FILE }}" "Install luci-theme-argon" ./install.sh

      - name: Check result
        run: ls -lh *.run

      - name: Push .run to Immortalwrt-ImageBuilder
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git clone https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/waynesg/Immortalwrt-ImageBuilder.git target-repo

          cd target-repo
          git checkout main

          # Âà†Èô§ÊóßÁöÑ luci-theme-argon_*.runÔºàÈô§ÂΩìÂâçÂ§ñÔºâ
          find extra-packages/ -type f -name "luci-theme-argon_*.run" ! -name "${{ env.RUN_FILE }}" -delete

          # Êã∑Ë¥ùÊñ∞ .run Êñá‰ª∂
          cp ../${{ env.RUN_FILE }} extra-packages/

          git add extra-packages/${{ env.RUN_FILE }}
          git commit -m "ü§ñ ÂêåÊ≠• luci-theme-argon: ${{ env.RUN_FILE }}"
          git push

      - name: Cleanup old workflow runs (keep latest 3)
        if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
        env:
          GH_TOKEN: ${{ secrets.REPO_TOKEN }}
          KEEP: 3
        run: |
          echo "Fetching workflow ID for current workflow..."
          WORKFLOW_ID=$(gh api repos/${{ github.repository }}/actions/workflows \
            | jq -r --arg name "${{ github.workflow }}" '.workflows[] | select(.name == $name) | .id')

          if [ -z "$WORKFLOW_ID" ]; then
            echo "‚ùå Workflow ID not found for '${{ github.workflow }}'"
            exit 0
          fi

          echo "‚úÖ Found workflow ID: $WORKFLOW_ID"

          echo "Deleting old workflow runs, keeping the latest $KEEP..."

          gh api repos/${{ github.repository }}/actions/workflows/$WORKFLOW_ID/runs \
            --paginate -q '.workflow_runs | .[] | .id' | tail -n +$(($KEEP + 1)) | while read run_id; do
            echo "üóëÔ∏è Deleting workflow run $run_id"
            gh api -X DELETE repos/${{ github.repository }}/actions/runs/$run_id
          done
