name: Build luci-app-tailscale

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "TAG=$(date +%Y%m%d-%H%M)" >> $GITHUB_ENV
          echo "TARGET=all" >> $GITHUB_ENV
          echo "PKG_NAME=luci-app-tailscale" >> $GITHUB_ENV
          echo "REPO=asvow/luci-app-tailscale" >> $GITHUB_ENV
          echo "RELEASE_TAG=v1.2.6" >> $GITHUB_ENV

      - name: Set run file name
        run: |
          echo "RUN_FILE=luci-app-tailscale_${{ env.TAG }}_${{ env.TARGET }}.run" >> $GITHUB_ENV

      - name: Create build directory and download .ipk files
        run: |
          mkdir build_dir && cd build_dir

          API_URL="https://api.github.com/repos/${{ env.REPO }}/releases/tags/${{ env.RELEASE_TAG }}"

          APP_URL=$(curl -s $API_URL | jq -r '.assets[] | select(.name | test("luci-app-tailscale_.*_all.ipk")) | .browser_download_url')
          echo "App URL: $APP_URL"
          curl -LO "$APP_URL"

          I18N_URL=$(curl -s $API_URL | jq -r '.assets[] | select(.name | test("luci-i18n-tailscale-zh-cn_.*_all.ipk")) | .browser_download_url')
          echo "I18N URL: $I18N_URL"
          curl -LO "$I18N_URL"

      - name: Create install.sh
        run: |
          cat <<EOF > build_dir/install.sh
          #!/bin/sh
          opkg update
          opkg install *.ipk
          EOF
          chmod +x build_dir/install.sh

      - name: Clone makeself
        run: git clone https://github.com/megastep/makeself.git

      - name: Build .run file
        run: |
          chmod +x makeself/makeself.sh
          chmod +x build_dir/install.sh
          ./makeself/makeself.sh build_dir "${{ env.RUN_FILE }}" "Auto install luci-app-tailscale" ./install.sh

      - name: Check .run file
        run: |
          ls -lh "${{ env.RUN_FILE }}"

      - name: Push to Immortalwrt-ImageBuilder
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git clone https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/waynesg/Immortalwrt-ImageBuilder.git target-repo

          # Âà†Èô§ÊóßÁöÑ luci-app-tailscale*.runÔºàÈô§ÂΩìÂâçÊûÑÂª∫ÁöÑÔºâ
          find target-repo/extra-packages/ -type f -name "luci-app-tailscale_*.run" ! -name "${{ env.RUN_FILE }}" -delete

          cp "${{ env.RUN_FILE }}" target-repo/extra-packages/

          cd target-repo
          git checkout main
          git add extra-packages/"${{ env.RUN_FILE }}"
          git commit -m "ü§ñ Ëá™Âä®ÂêåÊ≠• luci-app-tailscale RunFile: ${{ env.RUN_FILE }}"
          git push

      - name: Cleanup old workflow runs (keep latest 3)
        if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
        env:
          GH_TOKEN: ${{ secrets.REPO_TOKEN }}
          KEEP: 3
        run: |
          echo "Fetching workflow ID for current workflow..."
          WORKFLOW_ID=$(gh api repos/${{ github.repository }}/actions/workflows \
            | jq -r --arg name "${{ github.workflow }}" '.workflows[] | select(.name == $name) | .id')

          if [ -z "$WORKFLOW_ID" ]; then
            echo "‚ùå Workflow ID not found for '${{ github.workflow }}'"
            exit 0
          fi

          echo "‚úÖ Found workflow ID: $WORKFLOW_ID"

          echo "Deleting old workflow runs, keeping the latest $KEEP..."

          gh api repos/${{ github.repository }}/actions/workflows/$WORKFLOW_ID/runs \
            --paginate -q '.workflow_runs | .[] | .id' | tail -n +$(($KEEP + 1)) | while read run_id; do
            echo "üóëÔ∏è Deleting workflow run $run_id"
            gh api -X DELETE repos/${{ github.repository }}/actions/runs/$run_id
          done
