name: Make luci-app-mosdns run files

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch latest release tag from mosdns
        id: fetch_latest_tag
        run: |
          latest_tag=$(curl -sk https://api.github.com/repos/sbwml/luci-app-mosdns/releases | grep "tag_name" | grep v5 | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/,//;s/ //')
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Set run filename
        run: |
          DATE=$(date +%Y%m%d)
          echo "RUN_FILE=luci-app-mosdns_x86_64_${DATE}.run" >> $GITHUB_ENV

      - name: Clone makeself repository
        run: git clone https://github.com/megastep/makeself.git

      - name: Download latest mosdns files
        run: |
          echo "Downloading MosDNS IPK files..."
          curl -sk --connect-timeout 10 "https://api.github.com/repos/sbwml/luci-app-mosdns/releases" | grep "browser_download_url" | grep "${{ env.LATEST_TAG }}" > releases.txt
          mkdir -p mosdns_x86_64

          download_file() {
            local url=$1
            local output_dir=$2
            local filename=$(basename "$url")
            echo "Downloading $filename to $output_dir..."
            curl --connect-timeout 30 -m 600 -kLo "$output_dir/$filename" "$url"
            [ $? -ne 0 ] && echo "Error downloading $filename" && exit 1
          }

          mosdns_x86_64=$(grep "browser_download_url" releases.txt | grep "mosdns_5" | grep "x86_64.ipk" | head -1 | awk -F '"' '{print $4}')
          v2dat_x86_64=$(grep "browser_download_url" releases.txt | grep "v2dat_" | grep "x86_64.ipk" | head -1 | awk -F '"' '{print $4}')
          luci_app=$(grep "browser_download_url" releases.txt | grep "luci-app-mosdns_" | head -1 | awk -F '"' '{print $4}')
          luci_i18n=$(grep "browser_download_url" releases.txt | grep "luci-i18n-mosdns-zh-cn" | head -1 | awk -F '"' '{print $4}')
          geoip=$(grep "browser_download_url" releases.txt | grep "v2ray-geoip" | head -1 | awk -F '"' '{print $4}')
          geosite=$(grep "browser_download_url" releases.txt | grep "v2ray-geosite" | head -1 | awk -F '"' '{print $4}')

          download_file "$mosdns_x86_64" "mosdns_x86_64"
          download_file "$v2dat_x86_64" "mosdns_x86_64"
          download_file "$luci_app" "mosdns_x86_64"
          download_file "$luci_i18n" "mosdns_x86_64"
          download_file "$geoip" "mosdns_x86_64"
          download_file "$geosite" "mosdns_x86_64"

      - name: Create install.sh script
        run: |
          cat <<EOF > mosdns_x86_64/install.sh
          #!/bin/sh
          opkg update
          if [ $? -ne 0 ]; then
              echo "update failed„ÄÇ"
              exit 1
          fi
          opkg install *.ipk
          EOF
          chmod +x mosdns_x86_64/install.sh

      - name: Create run file using makeself
        run: |
          mv mosdns_x86_64 makeself/
          cd makeself
          ./makeself.sh mosdns_x86_64/ ${{ env.RUN_FILE }} "by github action" ./install.sh

      - name: Upload run file to Immortalwrt-ImageBuilder
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git clone https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/waynesg/Immortalwrt-ImageBuilder.git target-repo

          find target-repo/extra-packages/ -type f -name "luci-app-mosdns_x86_64_*.run" ! -name "${{ env.RUN_FILE }}" -delete

          cp makeself/${{ env.RUN_FILE }} target-repo/extra-packages/

          cd target-repo
          git checkout main
          git add extra-packages/${{ env.RUN_FILE }}
          git commit -m "ü§ñ Ëá™Âä®ÂêåÊ≠• MosDNS RunFile: $(date +%F_%T)"
          git push
