name: NEW Make Passwall2 run files

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch latest release tag from Passwall2
        id: fetch_latest_tag
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/xiaorouji/openwrt-passwall2/releases/latest | jq -r '.tag_name')
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          echo "RUN_FILE=luci-app-passwall2_x86_64_${latest_tag}.run" >> $GITHUB_ENV

      - name: Clone makeself repository
        run: git clone https://github.com/megastep/makeself.git

      - name: Download latest Passwall2 files
        run: |
          mkdir -p downloads
          cd downloads
          curl -LO $(curl -s https://api.github.com/repos/xiaorouji/openwrt-passwall2/releases/latest | grep -oP '"browser_download_url":\s*".*passwall_packages_ipk_x86_64.zip"' | cut -d '"' -f 4)
          curl -LO $(curl -s https://api.github.com/repos/xiaorouji/openwrt-passwall2/releases/latest | grep -oP '"browser_download_url":\s*".*luci-24.10.*\.ipk"' | head -1 | cut -d '"' -f 4)
          curl -LO $(curl -s https://api.github.com/repos/xiaorouji/openwrt-passwall2/releases/latest | grep -oP '"browser_download_url":\s*".*luci-24.10.*\.ipk"' | tail -1 | cut -d '"' -f 4)

      - name: Organize files for x86_64
        run: |
          mkdir -p passwall_x86_64/depends passwall_x86_64/main
          unzip downloads/passwall_packages_ipk_x86_64.zip -d passwall_x86_64/depends
          rm downloads/passwall_packages_ipk_x86_64.zip
          cp downloads/luci-24.10*.ipk passwall_x86_64/main/

      - name: Create install.sh scripts
        run: |
          cat <<EOF > passwall_x86_64/install.sh
            #!/bin/sh
            opkg update
            if [ \$? -ne 0 ]; then
                echo "update failed„ÄÇ"
                exit 1
            fi
            opkg install iptables-mod-tproxy
            opkg install iptables-mod-socket
            opkg install iptables-mod-iprange
            opkg install iptables-mod-conntrack-extra
            opkg install depends/*.ipk
            opkg install main/*.ipk
            EOF
          chmod +x passwall_x86_64/install.sh

      - name: Move passwall2 directories to makeself
        run: mv passwall_x86_64 makeself/

      - name: Create self-extracting packages
        run: |
          cd makeself
          ./makeself.sh passwall_x86_64/ "${{ env.RUN_FILE }}" "by github action" ./install.sh

      - name: Check file sizes
        run: ls -lh makeself/"${{ env.RUN_FILE }}"

      - name: Push run file to Immortalwrt-ImageBuilder
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git clone https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/waynesg/Immortalwrt-ImageBuilder.git target-repo

          # Âà†Èô§ÊóßÁâàÊú¨ÁöÑ Passwall2 .run Êñá‰ª∂Ôºà‰øùÁïôÂΩìÂâçÁâàÊú¨Ôºâ
          find target-repo/extra-packages/ -type f -name "luci-app-passwall2_*.run" ! -name "${{ env.RUN_FILE }}" -delete

          # Â§çÂà∂Êñ∞ÁöÑÊñá‰ª∂
          cp makeself/"${{ env.RUN_FILE }}" target-repo/extra-packages/

          cd target-repo
          git checkout main

          git add extra-packages/"${{ env.RUN_FILE }}"
          git commit -m "ü§ñ Ëá™Âä®ÂêåÊ≠• Passwall2 RunFile: ${{ env.LATEST_TAG }}"
          git push

      - name: Cleanup old workflow runs (keep latest 3)
        if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
        env:
          GH_TOKEN: ${{ secrets.REPO_TOKEN }}
          KEEP: 3
        run: |
          echo "Fetching workflow ID for current workflow..."
          WORKFLOW_ID=$(gh api repos/${{ github.repository }}/actions/workflows \
            | jq -r --arg name "${{ github.workflow }}" '.workflows[] | select(.name == $name) | .id')

          if [ -z "$WORKFLOW_ID" ]; then
            echo "‚ùå Workflow ID not found for '${{ github.workflow }}'"
            exit 0
          fi

          echo "‚úÖ Found workflow ID: $WORKFLOW_ID"

          echo "Deleting old workflow runs, keeping the latest $KEEP..."

          gh api repos/${{ github.repository }}/actions/workflows/$WORKFLOW_ID/runs \
            --paginate -q '.workflow_runs | .[] | .id' | tail -n +$(($KEEP + 1)) | while read run_id; do
            echo "üóëÔ∏è Deleting workflow run $run_id"
            gh api -X DELETE repos/${{ github.repository }}/actions/runs/$run_id
          done
