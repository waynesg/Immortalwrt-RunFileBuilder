name: Build luci-app-argon-config runfile

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          VERSION=$(curl -s https://api.github.com/repos/jerrykuku/luci-app-argon-config/releases/latest | jq -r '.tag_name')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TARGET=all" >> $GITHUB_ENV
          echo "PKG_NAME=luci-app-argon-config" >> $GITHUB_ENV
          echo "RUN_FILE=luci-app-argon-config_${VERSION}_all.run" >> $GITHUB_ENV

      - name: Download .ipk files
        run: |
          mkdir build_dir
          cd build_dir

          APP_URL=$(curl -s https://api.github.com/repos/jerrykuku/luci-app-argon-config/releases/latest \
            | jq -r '.assets[] | select(.name | test("luci-app-argon-config.*_all\\.ipk")) | .browser_download_url')
          echo "App URL: $APP_URL"
          curl -LO "$APP_URL"

          I18N_URL=$(curl -s https://api.github.com/repos/jerrykuku/luci-app-argon-config/releases/latest \
            | jq -r '.assets[] | select(.name | test("luci-i18n-argon-config-zh-cn_.*\\.ipk")) | .browser_download_url')
          echo "I18N URL: $I18N_URL"
          curl -LO "$I18N_URL"

      - name: Create install.sh
        run: |
          cat <<EOF > build_dir/install.sh
          #!/bin/sh
          opkg update
          opkg install *.ipk
          EOF
          chmod +x build_dir/install.sh

      - name: Clone makeself
        run: git clone https://github.com/megastep/makeself.git

      - name: Build .run file
        run: |
          chmod +x makeself/makeself.sh
          chmod +x build_dir/install.sh
          echo "RUN_FILE=$RUN_FILE"
          makeself/makeself.sh build_dir "$RUN_FILE" "Auto install luci-app-argon-config" ./install.sh

      - name: Check .run file
        run: ls -lh "$RUN_FILE"

      - name: Inspect .run contents
        run: |
          mkdir tmp
          sh "$RUN_FILE" --target tmp --noexec
          echo "=== Contents inside .run ==="
          ls -lh tmp

      - name: Push .run to Immortalwrt-ImageBuilder
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git clone https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/waynesg/Immortalwrt-ImageBuilder.git target-repo

          cd target-repo

          CURRENT_FILE_NAME=$(basename "${{ env.RUN_FILE }}")
          echo "ÂΩìÂâçÊûÑÂª∫Êñá‰ª∂Âêç: $CURRENT_FILE_NAME"

          # Âà†Èô§ÊóßÊñá‰ª∂ÔºàÊéíÈô§ÂΩìÂâçÔºâ
          find extra-packages/ -type f -name "luci-app-argon-config_*.run" ! -name "$CURRENT_FILE_NAME" -exec rm -f {} +

          # Êã∑Ë¥ùÊñ∞ÊûÑÂª∫ÁöÑ .run Êñá‰ª∂
          cp ../"${{ env.RUN_FILE }}" extra-packages/

          git checkout main

          # ÊòæÂºèËøΩË∏™Âà†Èô§ + Êñ∞Â¢ûÁöÑÊñá‰ª∂
          git add -u extra-packages/
          git add extra-packages/"$CURRENT_FILE_NAME"

          git commit -m "ü§ñ Ëá™Âä®ÂêåÊ≠•: $CURRENT_FILE_NAME"
          git push

      - name: Cleanup old workflow runs (keep latest 3)
        if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
        env:
          GH_TOKEN: ${{ secrets.REPO_TOKEN }}
          KEEP: 3
        run: |
          echo "Fetching workflow ID for current workflow..."
          WORKFLOW_ID=$(gh api repos/${{ github.repository }}/actions/workflows \
            | jq -r --arg name "${{ github.workflow }}" '.workflows[] | select(.name == $name) | .id')

          if [ -z "$WORKFLOW_ID" ]; then
            echo "‚ùå Workflow ID not found for '${{ github.workflow }}'"
            exit 0
          fi

          echo "‚úÖ Found workflow ID: $WORKFLOW_ID"

          echo "Deleting old workflow runs, keeping the latest $KEEP..."

          gh api repos/${{ github.repository }}/actions/workflows/$WORKFLOW_ID/runs \
            --paginate -q '.workflow_runs | .[] | .id' | tail -n +$(($KEEP + 1)) | while read run_id; do
            echo "üóëÔ∏è Deleting workflow run $run_id"
            gh api -X DELETE repos/${{ github.repository }}/actions/runs/$run_id
          done
